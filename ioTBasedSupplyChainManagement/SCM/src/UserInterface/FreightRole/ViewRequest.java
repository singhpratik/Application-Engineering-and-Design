/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FreightRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organisation.FreightOrganisation;
import Business.Organisation.Organisation;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FreightRequest;
import Business.WorkQueue.WarehouseWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik Singh <pratiksingh>
 */
public class ViewRequest extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    FreightOrganisation organisation;
    EcoSystem system;
    Enterprise enterprise;
    Product product = new Product();

    /**
     * Creates new form ViewRequest
     */
    public ViewRequest(JPanel userProcessContainer, UserAccount account, Organisation organisation, EcoSystem system, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organisation = (FreightOrganisation) organisation;
        this.system = system;
        this.enterprise = enterprise;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) freightWorkRequestTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : organisation.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();

            model.addRow(row);
        }
        
        if(model.getRowCount()==0)
        {
            assignJButton.setEnabled(false);
            processJButton.setEnabled(false);
            jButton2.setEnabled(false);
        }else{
         {
            assignJButton.setEnabled(true);
            processJButton.setEnabled(true);
            jButton2.setEnabled(true);
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        freightWorkRequestTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();

        freightWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(freightWorkRequestTable);

        assignJButton.setText("Assign to me");
        assignJButton.setToolTipText("Assign the request to yourself for processing");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        processJButton.setText("Process");
        processJButton.setToolTipText("Click to move the request to loading stage");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Load Trailer");
        jButton2.setToolTipText("Click to proeed with the freight loadin");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Transport Requests", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setText("Below table shows the requests forwarded from the Transport department for shipment");

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(assignJButton))
                        .addGap(270, 270, 270)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(processJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignJButton)
                    .addComponent(processJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(131, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = freightWorkRequestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a request to process", "Request os not selected", JOptionPane.ERROR_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest) freightWorkRequestTable.getValueAt(selectedRow, 0);
        if (request.getReceiver() != null) {
            JOptionPane.showMessageDialog(null, "Request is already assigned", "Request allocated", JOptionPane.ERROR_MESSAGE);

        }else{
        request.setReceiver(account);
        request.setStatus("Processing");
          JOptionPane.showMessageDialog(null, "Request is assigned", "Request", JOptionPane.INFORMATION_MESSAGE);

        }
        populateTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = freightWorkRequestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a request to process", "Request is not selected", JOptionPane.ERROR_MESSAGE);
            return;
        }

        FreightRequest request = (FreightRequest) freightWorkRequestTable.getValueAt(selectedRow, 0);
        if (request.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "First Assign the request", "No user is assigned to the request", JOptionPane.ERROR_MESSAGE);
        } else if (request.getStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(null, "Request is already processed.Select another request", "Request is completed", JOptionPane.ERROR_MESSAGE);
        } else if (!request.getReceiver().equals(account)) {
            JOptionPane.showMessageDialog(null, "Request cannot be processed", "Request is assigned to another user", JOptionPane.ERROR_MESSAGE);
        } else if(request.getStatus().equals("Loading")){
              JOptionPane.showMessageDialog(null, "Request is already processed", "ERROR", JOptionPane.ERROR_MESSAGE);
      
        }else {
            
            System.out.println();
            //request.setStatus("Processing");
            request.setTestResult("Request is processed");
            request.setStatus("Loading");
            JOptionPane.showMessageDialog(null, "Request is in processing", "INFO", JOptionPane.INFORMATION_MESSAGE);
      
            populateTable();
        }
    }//GEN-LAST:event_processJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
try{            // TODO add your handling code here:
        int selectedRow = freightWorkRequestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a request to load the  truck", "Request is not selected", JOptionPane.ERROR_MESSAGE);
            return;
        }
        FreightRequest loadRequest = (FreightRequest) freightWorkRequestTable.getValueAt(selectedRow, 0);
        if (loadRequest.getStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(null, "The item has been dispatched Already", "Request Completed", JOptionPane.ERROR_MESSAGE);
        } else if (!loadRequest.getStatus().equals("Loading")) {
            JOptionPane.showMessageDialog(null, "The request needs to be processed first", "Process request", JOptionPane.INFORMATION_MESSAGE);
        } else if (loadRequest.getStatus().equals("Loading")) {
            Product product = loadRequest.getProduct();
            UserAccount warUserName = loadRequest.getWarehouseUserName();
            int productQuantity = loadRequest.getProductQuantity();
            int requestId = loadRequest.getRequestId();
            WarehouseWorkRequest ware = loadRequest.getWarehouseWorkRequest();
            
            System.out.println("The product quantity in Freight Request is "+ productQuantity);
            System.out.println("The user name Test ==== "+ warUserName+ "value is "+loadRequest.getWarehouseUserName());
            loadRequest.setStatus("checking");
            System.out.println("The user name is "+ warUserName+ "The passed request is " + loadRequest.getWarehouseUserName());
            FreightLoadingPanel loadFreightNew = new FreightLoadingPanel(userProcessContainer, account, system, organisation, enterprise,product,warUserName,productQuantity,requestId,ware,loadRequest);
            
            userProcessContainer.add("load freight from Requst", loadFreightNew);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
           }
}catch(Exception e){
System.out.println("Error is loading freight");
}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JTable freightWorkRequestTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    // End of variables declaration//GEN-END:variables
}
