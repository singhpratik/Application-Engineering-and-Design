/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier;

import Business.Enterprise.Enterprise;
import Business.Organisation.Organisation;
import Business.Organisation.SupplierOrganisation;
import Business.Organisation.TransportOrganisation;
import Business.Product.Product;
import Business.Status.Status;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TransportWorkRequest;
import Business.WorkQueue.WarehouseWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik Singh <pratiksingh>
 */
public class ProcessWarehouseRequest extends javax.swing.JPanel {

    JPanel userProcessContainer;
    WarehouseWorkRequest warehouseWorkRequest;
    UserAccount userAccount;
    Enterprise enterprise;
    SupplierOrganisation organisation;

    /**
     * Creates new form ProcessWarehouseRequest
     */
    public ProcessWarehouseRequest(JPanel userProcessContainer, UserAccount userAccount, WarehouseWorkRequest warehouseWorkRequest, Enterprise enterprise, Organisation organisation) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.warehouseWorkRequest = warehouseWorkRequest;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.organisation = (SupplierOrganisation) organisation;
        populateTransporteRequestTable();
    }

    public void populateTransporteRequestTable() {
        DefaultTableModel model = (DefaultTableModel) supplierWorkRequestJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getReceiver();   
            row[2] = request.getStatus();              
            
            String result = ((TransportWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            row[4] = request.getProduct();
            model.addRow(row);
            
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierWorkRequestJTable = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setText("Forward to Transport >>");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        supplierWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Quantity", "Product"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(supplierWorkRequestJTable);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Below table shows the status of the requests which are forwared to the Transport Department");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Request for Transport");

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitJButton))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton))
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SupplierReceiveRequestJPanel dwjp = (SupplierReceiveRequestJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        warehouseWorkRequest.setTestResult("Approved");
        warehouseWorkRequest.setStatus("Completed");
        warehouseWorkRequest.setWarehouseUpdate("True");
          warehouseWorkRequest.setOrderRequestStatus(1);
          submitJButton.setEnabled(false);
        
        Product  transProduct = warehouseWorkRequest.getProduct();
        UserAccount warUserName = warehouseWorkRequest.getWarehouseUserName();
       System.out.println(warUserName .getUsername());
         int quantity = warehouseWorkRequest.getProductQuantity();
         int requestId = warehouseWorkRequest.getRequestId();
        String message = "Transport Request";

        TransportWorkRequest request = new TransportWorkRequest();
        request.setMessage(message);   
        request.setSender(userAccount);
        request.setProductQuantity(quantity);
        request.setStatus("Sent");
        request.setProduct(transProduct);
        request.setTransportUpdate("False");
        request.setWarehouseUserName(warUserName);
        request.setRequestId(requestId);
        request.setWareHousWorkRequest(warehouseWorkRequest);
        
        warehouseWorkRequest.setOrderRequestStatus(2); 
        
        //****8Hasmap implementation
          Status.getInstance().getStatusCheck().put(request.getRequestId(), 2);
        //
        
        
        Organisation org = null;

        for (Organisation organization : enterprise.getOrganisationDirectory().getOrganisationList()) {
            if (organization instanceof TransportOrganisation) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        //***********************************************************
        
        JOptionPane.showMessageDialog(null,"Request "+String.valueOf(requestId)+" is forwarded to Transport Department","INFO",JOptionPane.INFORMATION_MESSAGE);
        
    //    JOptionPane.showMessageDialog(null, "Fields cannot be blank. Please enter the  mandatory fields.", "Error: Fields cannot be empty", JOptionPane.ERROR_MESSAGE);
         
        populateTransporteRequestTable();
    }//GEN-LAST:event_submitJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable supplierWorkRequestJTable;
    // End of variables declaration//GEN-END:variables
}
