/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.Organisation.SupplierOrganisation;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import Business.Validator.ValidatorClass;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik Singh <pratiksingh>
 */
public class SupplierViewProduct extends javax.swing.JPanel {

    JPanel userProcessContainer;
    SupplierOrganisation organisation;
    EcoSystem system;
    Product product;
    UserAccount userAccount;
    Enterprise enterprise;
    Network network;

    /**
     * Creates new form SupplierViewProduct
     */
    public SupplierViewProduct(JPanel userProcessContainer, UserAccount userAccount, EcoSystem system, Organisation organisation, Enterprise enterprise,Network  network) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organisation = (SupplierOrganisation) organisation;
        this.system = system;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.network= network;
        populateTable();

    }

    public void populateTable() {
        // System.out.println(organisation.getManuProductList().getProductList().size());

        DefaultTableModel dtm = (DefaultTableModel) productTable.getModel();
        int rowCount = productTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        for (Product product : organisation.getManuProductList().getProductList()) {
            if (product.getSupplier().equals(userAccount)) {
                Object row[] = new Object[3];//Used to do operations on the Table.The rows and columns are created using this. The new Object[2] represents the column
                row[0] = product;
                row[1] = product.getPrice();
                row[2] = product.getpQquantity();
                dtm.addRow(row);
            }
        }
        
        if(dtm.getRowCount()==0)
        {
            jButton5.setEnabled(false);
            jButton7.setEnabled(false);
            jButton4.setEnabled(false);
            jButton3.setEnabled(false);
        }
        else{
             jButton5.setEnabled(true);
            jButton7.setEnabled(true);
            jButton4.setEnabled(true);
            jButton3.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        productName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtManuDate = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Poduct Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        jButton2.setText("<<   Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Procut Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel2.setText("Product Name:");

        jLabel5.setText("Manufacturing Date:");

        txtPrice.setEnabled(false);

        jLabel3.setText("Product Quantity:");

        productName.setEnabled(false);

        jLabel4.setText("Price:");

        txtManuDate.setEnabled(false);

        txtQuantity.setEnabled(false);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManuDate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtManuDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtPrice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(productName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtManuDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtQuantity, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Save Changes");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Delete Product");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLayeredPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton7)
                    .addComponent(jButton2)
                    .addComponent(jButton6))
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) productTable.getModel();
        int rowCount = productTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        for (Product product : organisation.getManuProductList().getProductList()) {
            if (product.getSupplier().equals(userAccount)) {
                if (product.getpName().equalsIgnoreCase(jTextField1.getText())) {
                    Object row[] = new Object[3];//Used to do operations on the Table.The rows and columns are created using this. The new Object[2] represents the column
                    row[0] = product;
                    row[1] = product.getPrice();
                    row[2] = product.getpQquantity();
                    dtm.addRow(row);
                }
            }

        }
        if (productTable.getRowCount() == 0) {

            JOptionPane.showMessageDialog(null, "No product found", "Info", JOptionPane.INFORMATION_MESSAGE);

            populateTable();
            jTextField1.setText("");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        populateTable();
        jTextField1.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        int selectRow = productTable.getSelectedRow();//getSelected row is used to get the selected row from the table
        if (selectRow >= 0) {
            Product product = (Product) productTable.getValueAt(selectRow, 0);
            int dialogueButton = JOptionPane.YES_NO_OPTION;
            int dialogueResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + product.getpName() + " ?", "warning", dialogueButton);
            if (dialogueResult == JOptionPane.YES_OPTION) {

                organisation.getManuProductList().deleteProduct(product);
                populateTable();
                boolean nflag = false;
                for (Enterprise warEnterprise : network.getEnterpriseDirectory().getEnterpriseList()) {

                    if (warEnterprise.getEnterpriseType().getValue().equals("Warehouse and Inventory Management")) {

                        for (Product mproduct : warEnterprise.getProductMasterList().getProductList()) {

                            if (mproduct.getpName().equals(product.getpName()) && mproduct.getSupplier().toString().equals(userAccount.toString())) {
                                deleteMasterProduct(warEnterprise, mproduct);
                                nflag = true;
                                break;
                            }
                        }
                        if (nflag) {
                            break;
                        }
                    }
                }
                JOptionPane.showMessageDialog(null, "Product has been removed successfully", "INFO", JOptionPane.INFORMATION_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        productName.setEnabled(true);
            txtQuantity.setEnabled(true);
            txtPrice.setEnabled(true);
            jButton5.setEnabled(false);
             jButton6.setEnabled(true);
             jButton7.setEnabled(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
     
            
            
        int selectRow = productTable.getSelectedRow();//getSelected row is used to get the selected row from the table
        if (selectRow >= 0) {
            Product product = (Product) productTable.getValueAt(selectRow, 0);
            
            ValidatorClass valid = new ValidatorClass();

            boolean emptyProd = valid.isEmpty(productName.getText());
            boolean emptyQuant = valid.isEmpty(txtQuantity.getText());
            boolean priceCheck = valid.isEmpty(txtPrice.getText());
            boolean prodIsNumber = valid.isNumber(txtQuantity.getText());
            boolean priceIsDouble = valid.isDoubel(txtPrice.getText());

            if (emptyProd || emptyQuant || priceCheck) {
                JOptionPane.showMessageDialog(null, "All fields are Mandotory.Please enter all the required fields", "Error: Fields cannot be empty", JOptionPane.ERROR_MESSAGE);

            } else if (!prodIsNumber) {
                JOptionPane.showMessageDialog(null, "Product Quantity should be a Number", "Error:Invalid Quanity", JOptionPane.ERROR_MESSAGE);
            } else if (!priceIsDouble) {
                JOptionPane.showMessageDialog(null, "please enter the correct product price", "Error:Invalid Price", JOptionPane.ERROR_MESSAGE);
            } else {

                product.setpName(productName.getText());
                product.setpQquantity(Integer.parseInt(txtQuantity.getText()));
                
                product.setPrice(Double.parseDouble(txtPrice.getText()));  
                populateTable();
                boolean nflag = false;
                for (Enterprise warEnterprise : system.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()) {

                    if (warEnterprise.getEnterpriseType().getValue().equals("Warehouse and Inventory Management")) {

                        for (Product mproduct : warEnterprise.getProductMasterList().getProductList()) {

                            if (mproduct.getpName().equals(product.getpName()) && mproduct.getSupplier().toString().equals(userAccount.toString())) {
                                updateMasterCatalog(mproduct);
                                nflag = true;
                                break;
                            }
                        }
                        if (nflag) {
                            break;
                        }
                    }
                }
                
                 productName.setEnabled(false);
            txtQuantity.setEnabled(false);
            txtPrice.setEnabled(false);
            jButton5.setEnabled(true);
            jButton6.setEnabled(false);
            jButton7.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Record updated succesfully","INFO", JOptionPane.INFORMATION_MESSAGE);

                
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product", "Error", JOptionPane.ERROR_MESSAGE);

        }
           
    }//GEN-LAST:event_jButton6ActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
           int selectRow = productTable.getSelectedRow();//getSelected row is used to get the selected row from the table
        if (selectRow >= 0) {
              productName.setEnabled(false);
            txtQuantity.setEnabled(false);
            txtPrice.setEnabled(false);
            jButton5.setEnabled(true);
            jButton6.setEnabled(false);
            jButton7.setEnabled(true);
            Product product = (Product) productTable.getValueAt(selectRow, 0);
            productName.setText(product.getpName());
            txtQuantity.setText(String.valueOf(product.getpQquantity()));
            txtPrice.setText(String.valueOf(product.getPrice()));
            txtManuDate.setText(String.valueOf(product.getMfgDate()));
            //  txtManuDate.setText(product.getMfgDate());

        } else {
            JOptionPane.showMessageDialog(null, "Please select a product from the table to view the details", "Person not selected", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_productTableMouseClicked

    public void updateMasterCatalog(Product product)
    {
         product.setpName(productName.getText());
                product.setpQquantity(Integer.parseInt(txtQuantity.getText()));     
                product.setPrice(Double.parseDouble(txtPrice.getText()));
    }
    
    public void deleteMasterProduct(Enterprise warEnterprise, Product product) {
        warEnterprise.getProductMasterList().deleteProduct(product);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField productName;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField txtManuDate;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
